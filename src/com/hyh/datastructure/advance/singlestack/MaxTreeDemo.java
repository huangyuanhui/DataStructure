package com.hyh.datastructure.advance.singlestack;

import java.util.Arrays;
import java.util.Stack;

/**
 * 构造数组的MaxTree（这棵树所有子树的根节点都是所在子树的最大值）
 * 数组没有重复元素
 * MaxTree是一颗二叉树 数组中的值对应一个二叉树的节点
 * 要求时间复杂度空间复杂度O(N)
 *
 * 可以使用大根堆
 *
 * 或者可以使用单调栈（不要求严格平衡的话）
 *     通过使用单调栈，将数组中中所有数的左右比他大的数记录下来
 * 　　当某个数既无左边比他大的数，有无右边比他大的数，则该数为全局最大，将其作为二叉树的根
 * 　　然后，某数只有左比他大的数，或者右比他大的数，则该数直接挂在比他大的数的下面，
 * 　　当某个数既有左比他大的数，又有右比他大的数，则挂在两个数中较小数的下面。
 * 　　然后直接构成一棵树。
 * 　　右大值为右孩子，左大值为左孩子
 */
public class MaxTreeDemo {


}
